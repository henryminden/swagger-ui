{
    "swagger": "2.0",
    "info": {
        "description": "This is the API explorer for the ChopAPI. This is a partial collection of the full suite of methods available in the ChopAPI. Coming soon -- credit, invite, kitchen, notification, order, and review",
        "version": "1.0.0",
        "title": "ChopAPI",
        "termsOfService": "http://trychop.com/terms",
        "contact": {
            "name": "henry@trychop.com"
        }
    },
    "host": "trychop.com",
    "basePath": "/ChopAPI",
    "schemes": [
        "http"
    ],
    "paths": {
        "/oauth": {
            "post": {
                "tags": [
                    "oauth"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "oauth request body",
                        "in": "body",
                        "description": "This is the request body for the grant type password oauth flow. It will give you a new valid access token if you enter an existing valid username and password",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/oauthrequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "invalid user/pass"
                    }
                }
            }
        },
        "/user": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "createUser object",
                        "in": "body",
                        "description": "This creates a new, credentialed user in the db",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created"
                    },
                    "412": {
                        "description": "precondition failed"
                    },
                    "424": {
                        "description": "db write error"
                    }
                }
            }
        },
        "/user/me": {
            "get": {
                "summary": "Get my user object (needs access token)",
                "description": "Gets user object associated with current access token",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "unauthorized"
                    }
                },
                "tags": [
                    "user"
                ]
            }
        },
        "/chop": {
            "get": {
                "tags": [
                    "chop"
                ],
                "summary": "Get chops by latitude and longitude",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "fetchType",
                        "type": "string",
                        "default": "fetchByDistanceFromLatLon",
                        "required": true,
                        "description": "put fetchByDistanceFromLatLon here"
                    },
                    {
                        "in": "query",
                        "name": "latitude",
                        "type": "number",
                        "format": "double",
                        "required": true,
                        "description": "latitude in double notation"
                    },
                    {
                        "in": "query",
                        "name": "longitude",
                        "type": "number",
                        "format": "double",
                        "required": true,
                        "description": "longitude in double notation"
                    },
                    {
                        "in": "query",
                        "name": "hilimit",
                        "type": "number",
                        "format": "int32",
                        "required": true,
                        "description": "max id query will return (start with 20)"
                    },
                    {
                        "in": "query",
                        "name": "lowlimit",
                        "type": "number",
                        "format": "int32",
                        "required": true,
                        "description": "min id query will return (start with 0)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "missing parameter"
                    },
                    "403": {
                        "description": "forbidden, requires access token"
                    }
                }
            }
        },
        "/user/{userId}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user by id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "Unique user identifier",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Update existing userId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "Unique user identifier",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    },
                    {
                        "name": "updateUser object",
                        "in": "body",
                        "description": "This updates the user object. Must have access token belonging to user you are trying to update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated"
                    }
                }
            },
            "delete": {
                "summary": "Deletes user",
                "description": "Deletes user",
                "responses": {
                    "204": {
                        "description": "deleted"
                    },
                    "403": {
                        "description": "unauthorized"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "description": "Unique user identifier",
                        "required": true,
                        "type": "number",
                        "format": "int32"
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        }
    },
    "definitions": {
        "oauthrequest": {
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "grant_type": {
                    "type": "string",
                    "description": "set this to password",
                    "default": "password"
                },
                "client_id": {
                    "type": "string",
                    "description": "set this to iOSApp",
                    "default": "iOSApp"
                }
            }
        },
        "createUser": {
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "confirmPassword": {
                    "type": "string"
                }
            }
        },
        "updateUser": {
            "properties": {
                "username": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "appleDeviceToken": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "phoneNumber": {
                    "type": "number",
                    "format": "int32",
                    "default": 0
                },
                "birthdate": {
                    "type": "string"
                },
                "gender": {
                    "type": "number",
                    "format": "int32",
                    "default": 0
                },
                "genderPreference": {
                    "type": "number",
                    "format": "int32",
                    "default": 0
                },
                "relationshipStatus": {
                    "type": "number",
                    "format": "int32",
                    "default": 0
                },
                "dietaryPreference": {
                    "type": "number",
                    "format": "int32",
                    "default": 0
                }
            }
        }
    }
}